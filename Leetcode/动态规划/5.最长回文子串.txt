class Solution {
public:
    string longestPalindrome(string s) {
        bool dp[1005][1005]={false};
        for(int i=0;i<s.length();i++)
            dp[i][i]=true;
        //最大长度
        int max_len=1,start=0;
        //区间长度   
        int j,i;
        for(int len=2;len<=s.length();len++){
            //左边界i，右边界 j=i+len-1
            for(i=0;i<s.length();i++){
                j=i+len-1;
                if(j>=s.length()){
                    break;
                }
                if(s[i]!=s[j]){
                    //前后不相等
                    dp[i][j]=false;
                }else{
                    //长度<=3
                    if(j-i+1<=3){
                        dp[i][j]=true;
                    }else{
                        //去掉前后两个字符
                        dp[i][j]=dp[i+1][j-1];
                    }
                }
                  //记录
                if(dp[i][j]==true&&j-i+1>max_len){
                    max_len=j-i+1;
                    start=i;
                }
            }
        }
        return s.substr(start,max_len);
    }
};